import paseo.*
describe "test de una familia que NO pasea" {

//NOTA: Este fixture está incompleto y sirve para comenzar a testear el examen.
//Es a modo de ayuda, pero no es obligatorio respetar este escenario. 
// Puede modificarse tanto como sea necesario.

	
	//prenda par, la media izquierda tiene que tener 1 de desgaste, la derecha 3, el abrigo es default 0
	var mediaIzquierda = new Prenda(desgaste = 1, talle=s) //elemento de par
	var mediaDerecha = new Prenda(desgaste = 3, talle=s)
	
    var mediasZoe = new PrendaPares(talle=s, prendaDerecha=mediaDerecha, prendaIzquierda=mediaIzquierda) 
	
	//prenda par, el izquierdo y derecho tiene los valores default (desgaste 0, abrigo 1)
	var zapaIzquierda = new Prenda()
	var zapaDerecha = new Prenda()
	
	var zapatillasZoe = new PrendaPares(talle=s, prendaDerecha=zapaDerecha, prendaIzquierda=zapaIzquierda) 
	
	//prenda pesada con 5 de abrigo
	var jeanZoe = new PrendaPesada(talle=s/*, abrigo=5*/) 
	
	//prenda liviana con desgaste default: 0
	var remeraZoe = new PrendaLiviana(talle=s)
	
	// prenda pesada con desgaste default: 0
	var camperaZoe = new PrendaPesada(talle=s) 

	//un juguete para niños de 5 a 100 anios
	var ukelele = new XXX(min=5, max=100)
	
	//prenda liviana con un desgaste de 5
	var remeraMilena = new PrendaLiviana(talle=xs, desgaste=5)
	
	//prenda liviana con desgaste default: 0
	var calzaMilena = new PrendaLiviana(talle=xs) //prenda liviana

	//prenda par, la ojota izquierda tiene que tener 1 de desgaste y 2 de abrigo, la ojota derecha tiene 3 de desgaste y 3 de abrigo
	var ojotaIzquierda = new Prenda(desgaste=1, talle=l)
	var ojotaDerecha = new Prenda(desgaste=3, talle=l)
	
	var ojotasMilena = new PrendaPares(talle=l, prendaDerecha=ojotaDerecha, prendaIzquierda=ojotaIzquierda) 
	
	//ninio
	var zoe = new Ninio(talle=s, edad=11, prendas=#{mediasZoe, zapatillasZoe, jeanZoe, remeraZoe, camperaZoe}) 

	//ninio problematico
	var milena = new Ninio(talle=xs, edad=2, prendas = #{remeraMilena, calzaMilena, ojotasMilena}/*, juguete=ukelele*/)
	
	//familia	
	var familiaAptaSalir = new XXX(ninios = #{ zoe})

	//familia	
	var familiaNoAptaParaSalir= new XXX(ninios = #{milena, zoe})
	
	
//PUNTO 1	
	test "comodidad" {
		
		assert.equals(6 , mediasZoe.nivelDeComodidad(zoe))
		assert.equals(8 , zapatillasZoe.nivelDeComodidad(zoe))
		assert.equals(8 , jeanZoe.nivelDeComodidad(zoe))
		assert.equals(10 , remeraZoe.nivelDeComodidad(zoe))
		assert.equals(8 , camperaZoe.nivelDeComodidad(zoe))
		assert.equals(7 , remeraMilena.nivelDeComodidad(milena))
		assert.equals(10 , calzaMilena.nivelDeComodidad(milena))
		assert.equals(-3 , ojotasMilena.nivelDeComodidad(milena))
	}


//PUNTO 2		
//	test "intercambiar pares ok" {
//		var mediaIzq = mediasZoe.izquierdo()
//		var mediaDer = mediasZoe.derecho()
//		var zapaIzq = zapatillasZoe.izquierdo()
//		var zapaDer = zapatillasZoe.derecho()
		
//		mediasZoe.intercambiar(zapatillasZoe)

//		assert.equals(mediaIzq, mediasZoe.izquierdo())
//		assert.equals(mediaDer, zapatillasZoe.derecho())
//		assert.equals(zapaIzq, zapatillasZoe.izquierdo())
//		assert.equals(zapaDer, mediasZoe.derecho())
				
//	}
	
//	test "intercambiar pares no ok" {
		//Que sucede si intercambio un par de talles distinto?
		//probar el cambio entre las ojotas de milena y las medias de zoe
		//El test está incompleto!
//		ojotasMilena.intercambiar(mediasZoe)
//	}


//PUNTO 3	
//	test "nivel de abrigo" {
//		assert.equals(2 , /* abrigo de mediasZoe*/)
//		assert.equals(2 , /* abrigo de zapatillasZoe*/)
//		assert.equals(5 , /* abrigo de jeanZoe */)
//		assert.equals(1 , /* abrigo de remeraZoe*/)
//		assert.equals(3 , /* abrigo de camperaZoe*/)
//		assert.equals(1 , /* abrigo de remeraMilena*/)		
//		assert.equals(1 , /* abrigo de calzaMilena*/)
//		assert.equals(5 , /* abrigo de ojotasMilena*/)
//	}

//PUNTO 4		
//	test "puede salir de paseo" {
//		assert.that(familiaAptaSalir.puedePasear())
//		assert.notThat(familiaNoAptaParaSalir.puedePasear())
//	}
//PUNTO 5
	
//	test "infaltables" {
//		assert.equals(#{jeanZoe,calzaMilena}, familiaNoAptaParaSalir.infaltables())		
//	}
//	test "chiquitos" {
//		assert.equals(#{milena}, familiaNoAptaParaSalir.chiquitos()
//		)		
//	}
	
//PUNTO 6	
//	test "salir de paseo ok" {
//		familiaAptaSalir.pasear()
//		assert.equals(1.8 , mediaIzquierda.desgaste())
//		assert.equals(4.2 , mediaDerecha.desgaste())
//		assert.equals(3 , mediasZoe.desgaste())
//		assert.equals(1 , zapatillasZoe.desgaste())
//		assert.equals(1 , jeanZoe.desgaste())
//		assert.equals(1 , remeraZoe.desgaste())
//		assert.equals(1 , camperaZoe.desgaste())
		
//	}
//PUNTO 7	
//	test "salir de paseo no ok" {
//		//Que sucede si le pido pasear a una familia que no está lista?
		//El test está incompleto!
//		familiaNoAptaParaSalir.pasear()
//	}
	
	
}